<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>week</h1>
<h2>week2</h2>
<h4>本周目標:架設個人網站</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/R7eVU4VwxHE" width="560"></iframe></p>
<p>1.先至個人githubthub建立一個新的倉儲將其命名為 "cad2019" 並將下面的</p>
<p>lnitialize this repository with a README選項打勾以建立倉儲</p>
<p>並且設定github page</p>
<p style="text-align: center;"><img caption="false" height="540" src="/images/建立倉儲.png" width="960"/></p>
<p style="text-align: center;">(建立倉儲)</p>
<p style="text-align: center;"><img caption="false" height="540" src="/images/選擇分業.png" width="960"/></p>
<p style="text-align: center;">(選擇分頁)</p>
<p>2.下載 <a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view">課程套件</a> 並解壓縮放入隨身碟中</p>
<p style="text-align: center;"><img caption="false" height="540" src="/images/下載可熙套件.png" width="960"/></p>
<p style="text-align: center;">(下載可攜套件)</p>
<p style="text-align: center;"><img caption="false" height="540" src="/images/解壓縮.png" width="960"/></p>
<p style="text-align: center;">(解壓縮)</p>
<p>3.將倉儲 git clone 下來(若在學校中需要設定proxy)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/複製倉儲位置.png" width="960"/></p>
<p style="text-align: center;">(複製倉儲網址)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/clone.png" width="960"/></p>
<p style="text-align: center;">(clone下來)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/設定PROXY1.png" width="960"/></p>
<p style="text-align: center;">(到home_mdecourse設定proxy)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/PROXY.png" width="960"/></p>
<p style="text-align: center;">(開啟.gitcongif設定proxy=[2001:288:6004:17::17]:3128)</p>
<p>4.這學期近端有所變更需要使用 git submodule 將子模組下載下來</p>
<p>其指令為 git submodule add https://github.com/mdecourse/cmsimde.git cmsimde</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/submodule.png" width="960"/></p>
<p style="text-align: center;">(利用submodule載入子模組)</p>
<p>5.進入倉儲資料夾中打開 cmsimde --&gt; up_dir 將檔案全選後複製到倉儲資料夾中</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/cmsimde.png" width="960"/></p>
<p style="text-align: center;">(打開倉儲資料夾中的cmsimde)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/UP_DIR.png" width="960"/></p>
<p style="text-align: center;">(在開啟裡面的up_dir)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/全選.png" width="960"/></p>
<p style="text-align: center;">(將檔案全選後copy並回到倉儲資料夾貼上)</p>
<p>6.在cmd視窗中切換至 cmsimdede 資料夾 輸入 python wsgi.py 開啟近端伺服器</p>
<p>(首次執行需額外再輸入 python -m pip install flask_cors下載套件)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/python++.png" width="960"/></p>
<p style="text-align: center;">(下載<span>flask_cors</span>套件)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/PYTHON_SERVER.png" width="960"/></p>
<p style="text-align: center;">(架設近端伺服器)</p>
<p>7.打開瀏覽器輸入 https://localhost:9443 (埠號為個人所設定 預設為9443)進行編輯</p>
<p>且打開靜態網頁查看編輯結果</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/WEB.png" width="960"/></p>
<p style="text-align: center;">(動態近端網址)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/edit.png" width="960"/></p>
<p style="text-align: center;">(更改動態近端內容後轉化為靜態近端)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/9444.png" width="960"/></p>
<p style="text-align: center;">(靜態近端網址)</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/8444.png" width="960"/></p>
<p style="text-align: center;">(查看是否修改成功)</p>
<p>8.編輯完成後將檔案 git push 至雲端後 完成本周的目標</p>
<p style="text-align: center;"><img alt="" height="540" src="/images/PUSH.png" width="960"/></p>
<p style="text-align: center;">(將檔案push至github)</p>
<h2>week3</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3IWNvAf47HY" width="560"></iframe></p>
<h5>本周目標:編譯Solvespace</h5>
<p>1.先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</p>
<p>2.利用利用 git version 檢查當前 git 版本<br/><br/>若是在2.13以上則可使用 git clone --recurse-submodules 取得所有子模組資料</p>
<p><span>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</span></p>
<p><span>3.接下來到 Y:\tmp\solvespace\extlib\angle\CMakeLists.txt 713&amp;741行看是否為</span></p>
<p><span>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()</span></p>
<h5></h5>
<p>4.回到 solvespace 目錄輸入</p>
<p>cd extlib -&gt; cd libpng -&gt; mkdir build -&gt; cd build</p>
<p>利用 cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release 搜尋系統有哪些可用項目</p>
<p>使用 mingw32-make 編譯出一個動態連結庫</p>
<p>5.不過 libpng.dll.a 是靜態的要到 Y:\tmp\solvespace\extlib\libping\build </p>
<p>將他改名成 libpng_static.a 後將它複製</p>
<p>到 Y:\msys64\mingw64\lib 將它貼上</p>
<p>6.然後回到 solvespace 目錄輸入</p>
<p>mkdir build -&gt; cd build -&gt; cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release <span>搜尋系統有哪些可用項目</span></p>
<p>最後 mingw32-make 等待其編譯</p>
<p>7.完成且成功後就可以啟動 solvespace開始學習繪製囉</p>
<p></p>